apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: monitoring
  labels:
    app: alertmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      containers:
      - name: alertmanager
        image: prom/alertmanager:latest
        args:
        - --config.file=/etc/alertmanager/config.yml
        - --storage.path=/alertmanager
        - --web.external-url=http://alertmanager:9093
        ports:
        - containerPort: 9093
        volumeMounts:
        - name: config
          mountPath: /etc/alertmanager
        - name: storage
          mountPath: /alertmanager
      volumes:
      - name: config
        configMap:
          name: alertmanager-config
      - name: storage
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: monitoring
data:
  config.yml: |-
    global:
      smtp_smarthost: 'localhost:587'
      smtp_from: 'alerts@hotel-voice-bot.com'
      pagerduty_url: 'https://events.pagerduty.com/v2/enqueue'

    route:
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
      routes:
      - match:
          severity: critical
        receiver: 'pagerduty-critical'
      - match:
          severity: warning
        receiver: 'slack-warning'

    receivers:
    - name: 'web.hook'
      webhook_configs:
      - url: 'http://webhook-receiver:5000/webhook'

    - name: 'pagerduty-critical'
      pagerduty_configs:
      - service_key: '{{PAGERDUTY_SERVICE_KEY}}'
        description: 'Critical alert for Hotel Voice Bot'
        client: 'Alertmanager'
        client_url: 'http://alertmanager:9093'
        details:
          firing: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
          resolved: 'Alert resolved'

    - name: 'slack-warning'
      slack_configs:
      - api_url: '{{SLACK_WEBHOOK_URL}}'
        channel: '#alerts'
        username: 'Alertmanager'
        color: 'warning'
        title: 'Warning Alert'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'

    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      equal: ['alertname', 'dev', 'instance']
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  type: ClusterIP
  ports:
  - port: 9093
    targetPort: 9093
  selector:
    app: alertmanager
