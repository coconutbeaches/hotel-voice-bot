-- Last Updated: 2025-07-17

-- Enable the pg_vector extension
CREATE EXTENSION IF NOT EXISTS vector;

-- Define guests table
CREATE TABLE IF NOT EXISTS guests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT NOT NULL
);

-- Define conversations table
CREATE TABLE IF NOT EXISTS conversations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guest_id BIGINT REFERENCES guests(id),
  started_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Define messages table
CREATE TABLE IF NOT EXISTS messages (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  conversation_id BIGINT REFERENCES conversations(id),
  content TEXT NOT NULL,
  sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Define intents table
CREATE TABLE IF NOT EXISTS intents (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT NOT NULL
);

-- Define prompt_versions table
CREATE TABLE IF NOT EXISTS prompt_versions (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  version TEXT NOT NULL
);

-- Define service_requests table
CREATE TABLE IF NOT EXISTS service_requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guest_id BIGINT REFERENCES guests(id),
  request TEXT,
  status TEXT
);

-- Define bookings table
CREATE TABLE IF NOT EXISTS bookings (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  guest_id BIGINT REFERENCES guests(id),
  check_in DATE,
  check_out DATE
);

-- Define upsell_offers table
CREATE TABLE IF NOT EXISTS upsell_offers (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  offer TEXT NOT NULL
);

-- Enable Row-Level Security & Create Policies
ALTER TABLE guests ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Staff can view guests" ON guests
  FOR SELECT
  USING (auth.role() = 'staff');

ALTER TABLE conversations ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Internal services can view conversations" ON conversations
  FOR SELECT
  USING (auth.role() = 'internal');

ALTER TABLE messages ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Staff can view messages" ON messages
  FOR SELECT
  USING (auth.role() = 'staff');

ALTER TABLE intents ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Internal services can use intents" ON intents
  FOR SELECT
  USING (auth.role() = 'internal');

ALTER TABLE prompt_versions ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Internal services can view prompt versions" ON prompt_versions
  FOR SELECT
  USING (auth.role() = 'internal');

ALTER TABLE service_requests ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Staff can view service requests" ON service_requests
  FOR SELECT
  USING (auth.role() = 'staff');

ALTER TABLE bookings ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Internal services can view bookings" ON bookings
  FOR SELECT
  USING (auth.role() = 'internal');

ALTER TABLE upsell_offers ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Staff can view upsell offers" ON upsell_offers
  FOR SELECT
  USING (auth.role() = 'staff');

